@addTagHelper *,Microsoft.AspNetCore.Mvc.TagHelpers
@using PRN_ExamO_HE176160.Models
@using Microsoft.AspNetCore.Http
@model Tuple<List<Question>, List<Option>>
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    string user = Context.Session.GetString("Uname");
    int? userId = Context.Session.GetInt32("UId");
}

<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Bebas+Neue&family=Nunito:ital,wght@0,200;0,400;0,500;0,600;0,700;0,800;0,1000;1,400;1,500&family=Oswald:wght@600&family=Roboto:wght@100;400;500;700&display=swap" rel="stylesheet">

<script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
<script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>

<style>


    body {
        background-color: #fbfbfb;
    }

    * {
        font-family: 'Bebas Neue', sans-serif;
        font-family: 'Nunito', sans-serif;
        font-family: 'Oswald', sans-serif;
        font-family: 'Roboto', sans-serif;
        color: #4d4d4d;
        /*border: 1px solid red !important;*/

        transition: .3s all ease;
    }

    .login-user {
        display: flex;
        flex-direction: row;
        align-items: center;
        /*justify-content: flex-end;*/
        justify-content: space-between;
        margin: 1rem 2rem;
    }

        .login-user ion-icon{
            font-size:1.5rem;
            cursor:pointer;
        }

    .index-header {
        min-height: 150px;
        margin: 2rem;
        padding: 1rem;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        background-color: #ffffff;
        border-radius: 1rem;
        box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;
        font-size: 3rem;
    }

    .quest-nav {
    }

        .quest-nav span {
        }

        .quest-nav a {
            font-size:2rem;
            width:1rem;
            background-color: #fbfbfb;
            padding: .4rem 1rem;
            border: 2px solid #fbfbfb;
            border-radius:8px;
            text-decoration:none;
        }

    .takeQuizz-wrap{
        display:flex;
        flex-direction:row;
        width:calc(100% - 4rem);
        
        margin: 0 2rem;
    }

    .takeQuizz-content {
        width:75%;
        padding: 2rem;
        background-color: #ffffff;
        border-radius: 1rem;
        box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;

        /*display:flex;
        flex-direction:row;*/
        align-self:flex-start;

        margin-right:1rem;
    }

        .takeQuizz-content form{
            display: flex;
            flex-direction: row;
            align-items:center;

            /*overflow-x:scroll;*/
            overflow-x: hidden;
        }

        .takeQuizz-content form::-webkit-scrollbar {
            display: none; 
        }

    .takeQuizz-util{
        width:25%;
        height: 100%;
        padding: 2rem;
        background-color: #ffffff;
        border-radius: 1rem;
        box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;

        margin: 0 0 0 auto;

    }

    .question-wrap{
        width:100%;

        display:flex;
        flex-direction:column;

        justify-content:space-between;

        height: 45svh;

        flex-shrink:0;
    }

    .q-text span{
        font-size:1.5rem;
    }

    .opion-section {
        /*background-color: #fbfbfb;*/


        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 1rem;

        /*padding: 2rem;*/
    }

    .option-item {
        /*background-color:crimson;*/

        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: center;
        
        padding: 0 2rem;
    }

        .option-item label {
            font-size:1.5rem;
            border: 2px solid #fbfbfb;
            background-color: #fbfbfb;
            border-radius: 1.5rem;
            min-width: 70%;
            text-align: center;
            padding: 1rem;
            cursor: pointer;
        }

        .option-item:not(.active) label:hover {
            box-shadow: rgba(0, 0, 0, 0.04) 0px 3px 5px;
        }

        .option-item.active label {
            background-color: rgba(127, 255, 212, 0.25);
            border: 2px solid aquamarine;
        }

    .active-link {
        background-color: rgba(127, 255, 212, 0.25) !important;
        border: 2px solid aquamarine !important;
    }
</style>

<section class="login-user">
    <a href="/home"><ion-icon name="chevron-back-outline"></ion-icon></a>
    
    @if (user != null && !user.Trim().Equals(""))
    {
        <span>@user&nbsp</span>
    }
</section>
<section class="index-header">
    <span>@ViewBag.ExamId : @ViewBag.ExamName</span>
    <div class="quest-nav">
    <span>
        @foreach (var question in Model.Item1)
        {
            var questionId = "question-wrap-" + question.QuestionId;
            var questionIndex = Model.Item1.IndexOf(question) + 1;
            <a href="#@questionId" onclick="scrollToDiv(event, '@questionId')">@questionIndex</a>
        }
    </span>
    </div>
</section>
<main class="takeQuizz-wrap">
    <section class="takeQuizz-content">
    <form>
        @foreach (var question in Model.Item1)
        {
            var questionIndex = Model.Item1.IndexOf(question) + 1;
            <div class="question-wrap" id="question-wrap-@question.QuestionId">
                <div class ="q-text">
                    <span> @questionIndex. @question.QuestionText</span>
                </div>
                <div class="opion-section">
                    @foreach (var option in Model.Item2.Where(o => o.QuestionId == question.QuestionId))
                    {
                        <div class="option-item">
                            <input type="checkbox" id="@option.OptionId" name="@option.OptionId" hidden onchange="toggleOptionItemClass(this)" />
                            <label for="@option.OptionId">@option.OptionText</label>
                        </div>
                    }
                </div>
            </div>
        }
    </form>
    </section>
    <section class="takeQuizz-util">
        Timmer
    </section>
</main>

<script>
    function scrollToDiv(event, targetId) {
        event.preventDefault(); // Prevent default link behavior
        var targetDiv = document.getElementById(targetId);
        targetDiv.scrollIntoView({ behavior: "smooth" }); // Scroll to the target div smoothly
    }


    function toggleOptionItemClass(checkbox) {
        var optionItem = checkbox.parentNode;
        var questionId = optionItem.closest(".question-wrap").id.replace("question-wrap-", "");
        var link = document.querySelector(`a[href="#question-wrap-${questionId}"]`);

        if (checkbox.checked) {
            optionItem.classList.add("active");
            link.classList.add("active-link");
        } else {
            optionItem.classList.remove("active");
            link.classList.remove("active-link");
        }
    }
</script>
